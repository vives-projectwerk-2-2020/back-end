name: Docker Image CI

on:
  push:
    branches: [ develop ]
  pull_request:
    branches: [ develop ]
env:
  IMAGE_NAME: particula-back-end
jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
      
    - uses: whoan/docker-build-with-cache-action@master
      with:
        username: "${{ secrets.USERNAME }}"
        password: "${{ secrets.KEY }}"
        image_name: vives-projectwerk-2-2020/back-end/particula-back-end
        #image_tag: alpine-slim
        registry: docker.pkg.github.com
        #context: .

    - name: Build the Docker image
      run: docker build . --file Dockerfile --tag image
    
    - name: Log into registry
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login docker.pkg.github.com -u ${{ github.actor }} --password-stdin

    - name: Push image
      run: |
        IMAGE_ID=docker.pkg.github.com/${{ github.repository }}/$IMAGE_NAME
        
        # Strip git ref prefix from version
        VERSION=$(echo "${{ github.ref }}" | sed -e 's,.*/\(.*\),\1,')
        
        # Strip "v" prefix from tag name
        [[ "${{ github.ref }}" == "refs/tags/"* ]] && VERSION=$(echo $VERSION | sed -e 's/^v//')
        
        # Convert IMAGE_ID to lowercase
        IMAGE_ID="${IMAGE_ID,,}"
        
        echo IMAGE_ID=$IMAGE_ID
        echo VERSION=$VERSION
        docker tag image $IMAGE_ID:$VERSION
        docker push $IMAGE_ID:$VERSION
        
  deploy:
    name: deploy
    needs: [build]
    runs-on: ubuntu-latest
    steps:
    - name: executing remote ssh commands using password
      uses: appleboy/ssh-action@master
      with:
        host: ${{ secrets.HOST }}
        username: ${{ secrets.USERNAME }}
        key: ${{ secrets.KEY }}
        port: ${{ secrets.PORT }}
        script: |
          cd ${{ secrets.PATH }}
          docker-compose pull backend
          docker-compose up -d backend

